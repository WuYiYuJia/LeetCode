//算法优化
//此处MX可以不为100001
//可为字符串的最大长度
class Solution {
public:
    static const int MOD = 1'000'000'007, MX = 100'001;(pressedkeys.length())
    long long f[MX],g[MX];
    int init = [this]() {
        f[0] = g[0] = 1;
        f[1] = g[1] = 1;
        f[2] = g[2] = 2;
        f[3] = g[3] = 4;
        for (int i = 4; i < MX; ++i) {
            f[i] = (f[i - 1] + f[i - 2] + f[i - 3]) % MOD;
            g[i] = (g[i - 1] + g[i - 2] + g[i - 3] + g[i - 4]) % MOD;
        }
        return 0;
    }();
    int countTexts(string pressedKeys) {
        long long ans=1;
        int cnt=0;
        for(int i=0;i<pressedKeys.length();i++){
            cnt++;
            if(pressedKeys[i]!=pressedKeys[i+1]||i==pressedKeys.length()-1){
                ans = ans*(pressedKeys[i]!='7'&&pressedKeys[i]!='9'?f[cnt]:g[cnt])%MOD;
                cnt=0;
            }

        }
        return ans;
    }
};
